#!/usr/bin/env rake

$: << "./lib"

require 'socket'
require 'rake/extensiontask'

spec = Gem::Specification.load('dynasty_io.gemspec')
Rake::ExtensionTask.new('dynasty_io', spec)

task :default => :server

task :server do
  require 'dynasty'
  require 'dynasty_io'

  #puts DynastyIO.send_io(0, 1)
  #exit

  leader, descriptors = Dynasty.server

  leader.autoclose = false

  select_timeout = 0.001

  leader_tcp = TCPServer.for_fd(leader.fileno)
  leader_tcp.autoclose = false

  selectable_sockets = [leader_tcp]

  #puts selectable_sockets.inspect

  ruling = true

  if descriptors.empty?
    #puts :making
    descriptors = []
    descriptors << TCPServer.new("localhost", 12345)
    descriptors << TCPServer.new("localhost", 12346)
  end

  #puts "!!!!"
  #puts leader.inspect
  #puts leader.closed?
  #puts "!!!!"

  while ruling
    readable, writable, errored = IO.select(selectable_sockets, nil, nil, select_timeout)
    #$stdout.write(".")

    readable && readable.each do |needs_reading|
      #puts :read, needs_reading
      case needs_reading
        when leader_tcp
          ruling = Dynasty.rule(leader, descriptors)
      end

      #puts :readed, needs_reading.read_nonblock(1014)
    end

    #writable && writable.each do |needs_writing|
    #  puts :write, needs_writing
    #end
  end

  #puts :done

end
